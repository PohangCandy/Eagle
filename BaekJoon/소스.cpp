//아이디어
// 진짜 개미친 풀이를 발견했다.
// 3자릿수에도 1자릿수, 2자릿수가 있는 것으로 간주한다.
// N이 120일 때
// 1~120은 1자릿수가 모두 들어있다.
// 10 ~ 120 은 모두 2 자릿수가 들어있다.
// 100 ~ 120은 모두 3자릿수가 들어있다.
// 이런 식으로 풀이하면 9번 만에 모든 자릿수를 더한 결과를 얻을 수 있다.
// for문을 이용해서 
// 1~N, 10~N,100~N까지의 개수를 누적으로 더해준다.
// 
//시간복잡도
// 9

// 메모리
//  배열도 쓰지않고 변수만 사용하므로 사용없다.
// 
// 자료형
//  모든 자릿수를 더할 변수를 고려한다.
//  8번째 자릿수까지 올수 있는 수는 10^7 ~ (10^8 - 1)이다.
//  이 수들의 개수는 약 10^8
//  이 수들을 자릿수인 8과 곱하면 8 ^ 10^8
//  가장 최댓값인 N = 10^8 고려해도 
//  int 형 최대 양수 범위인 2 * 10^9을 넘지 않을 것으로 보인다.


#include <iostream>
using namespace std;

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int N;
	cin >> N;

	int ans = 0;

	for (int i = 1; i <= N; i *= 10)
	{
		ans += N - i + 1;
	}

	cout << ans;

	return 0;
}